//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8831
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8831.
// 
namespace FATHBarcode.JavaWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicesBLServiceSoapBinding", Namespace="http://logic.model.services.nssol.co.th/")]
    public partial class ServicesBLService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ServicesBLService() {
            this.Url = "http://192.168.100.144:8090/tag_webservice/services/ServicesBLPort";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getLogin([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getLogin", new object[] {
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetLogin(string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getLogin", new object[] {
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertShippingDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("insertShippingDetail", new object[] {
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertShippingDetail(string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertShippingDetail", new object[] {
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndinsertShippingDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getShippingDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getShippingDetail", new object[] {
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetShippingDetail(string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getShippingDetail", new object[] {
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetShippingDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getConnectAX([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getConnectAX", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetConnectAX(string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getConnectAX", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetConnectAX(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getMasterData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string function, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getMasterData", new object[] {
                        function,
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetMasterData(string function, string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getMasterData", new object[] {
                        function,
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetMasterData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getConnectD365([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getConnectD365", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetConnectD365(string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getConnectD365", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetConnectD365(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertPickingDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("insertPickingDetail", new object[] {
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertPickingDetail(string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertPickingDetail", new object[] {
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndinsertPickingDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string insertMasterData([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string function, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("insertMasterData", new object[] {
                        function,
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegininsertMasterData(string function, string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("insertMasterData", new object[] {
                        function,
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndinsertMasterData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://logic.model.services.nssol.co.th/", ResponseNamespace="http://logic.model.services.nssol.co.th/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPickingDetail([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string @object, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getPickingDetail", new object[] {
                        @object,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPickingDetail(string @object, string userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPickingDetail", new object[] {
                        @object,
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetPickingDetail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
